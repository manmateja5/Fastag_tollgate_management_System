# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Welcom.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
import MySQLdb as mdb
from PyQt5.QtWidgets import *
from Login import Ui_Login
from signin import Ui_Form
import matplotlib.pyplot as plt
import numpy as np
from Vechile import Ui_VWindow
import seaborn as sn




class Ui_MainWindow(object):
    def vechile(self):
        db= mdb.connect('localhost', 'root', '', 'fastag')
        mycursor = db.cursor()


    def pie(self):
        db = mdb.connect('localhost', 'root', '', 'fastag')
        mycursor = db.cursor()

        query = "SELECT count(exitpoint) from travelh where exitpoint like '"+str(1)+"'"
        mycursor.execute(query)
        result = mycursor.fetchone()
        one = int(result[0])
        query2 = "SELECT count(exitpoint) from travelh where exitpoint like '" + str(2) + "'"
        mycursor.execute(query2)
        result2 = mycursor.fetchone()
        two = int(result2[0])
        query3 = "SELECT count(exitpoint) from travelh where exitpoint like '" + str(3) + "'"
        mycursor.execute(query3)
        result3 = mycursor.fetchone()
        three = int(result[0])
        query4 = "SELECT count(exitpoint) from travelh where exitpoint like '" + str(4) + "'"
        mycursor.execute(query4)
        result4 = mycursor.fetchone()
        four = int(result[0])
        query5 = "SELECT count(exitpoint) from travelh where exitpoint like '" + str(5) + "'"
        mycursor.execute(query5)
        result5 = mycursor.fetchone()
        five = int(result[0])



        y = np.array([one, two ,three, four, five])
        mylabels = ["Exit1", "Exit2", "Exit3", "Exit4", "Exit5"]
        myexplode = [0.1, 0.15, 0.2, 0.25, 0.3]
        plt.pie(y, labels=mylabels, explode=myexplode)
        plt.legend()
        plt.show()
    def login(self):
        username = self.lineEdit.text()
        password = self.lineEdit_2.text()
        db = mdb.connect('localhost', 'root', '', 'fastag')
        mycursor = db.cursor()

        query = "SELECT username,password from users WHERE username like'"+username+"'and password like'"+password+"'"
        mycursor.execute(query)
        result = mycursor.fetchone()

        if result is not None:
          self.window = QtWidgets.QMainWindow()
          self.ui = Ui_Login()
          self.ui.setupUi(self.window)
          self.window.show()
        else:
            sys.exit(app.exec_())




    def signin(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_Form()
        self.ui.setupUi(self.window)
        self.window.show()

    def Vech(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_VWindow()
        self.ui.setupUi(self.window)
        self.window.show()
    def heatmap(self):
        db = mdb.connect('localhost', 'root', '', 'fastag')
        mycursor = db.cursor()
        query = "SELECT username from users WHERE vtype like'"+str(4)+"'"
        mycursor.execute(query)
        result = mycursor.fetchall()
        one = 0
        two = 0
        three = 0
        four = 0
        five = 0
        for i in result:
            query2 = "SELECT count(exitpoint) from travelh where exitpoint like'"+str(1)+"'and username like'"+i[0]+"'"
            mycursor.execute(query2)
            result2 = mycursor.fetchone()
            one = one + int(result2[0])
        for i in result:
            query3 = "SELECT count(exitpoint) from travelh where exitpoint like'"+str(2)+"'and username like'"+i[0]+"'"
            mycursor.execute(query3)
            result3 = mycursor.fetchone()
            two = two + int(result3[0])
        for i in result:
            query4 = "SELECT count(exitpoint) from travelh where exitpoint like'"+str(3)+"'and username like'"+i[0]+"'"
            mycursor.execute(query4)
            result4 = mycursor.fetchone()
            three = three + int(result4[0])
        for i in result:
            query5 = "SELECT count(exitpoint) from travelh where exitpoint like'"+str(4)+"'and username like'"+i[0]+"'"
            mycursor.execute(query5)
            result5 = mycursor.fetchone()
            four = four + int(result5[0])
        for i in result:
            query6 = "SELECT count(exitpoint) from travelh where exitpoint like'"+str(5)+"'and username like'"+i[0]+"'"
            mycursor.execute(query6)
            result6 = mycursor.fetchone()
            five = five + int(result6[0])

        querya = "SELECT username from users WHERE vtype like'"+str(2)+"'"
        mycursor.execute(querya)
        resulta = mycursor.fetchall()
        onea = 0
        twoa = 0
        threea = 0
        foura = 0
        fivea = 0
        for i in resulta:
            query2a = "SELECT count(exitpoint) from travelh where exitpoint like'"+str(1)+"'and username like'"+i[0]+"'"
            mycursor.execute(query2a)
            result2a = mycursor.fetchone()
            onea = onea + int(result2a[0])
        for i in resulta:
            query3a = "SELECT count(exitpoint) from travelh where exitpoint like'"+str(2)+"'and username like'"+i[0]+"'"
            mycursor.execute(query3a)
            result3a = mycursor.fetchone()
            twoa = twoa + int(result3a[0])
        for i in resulta:
            query4a = "SELECT count(exitpoint) from travelh where exitpoint like'"+str(3)+"'and username like'"+i[0]+"'"
            mycursor.execute(query4a)
            result4a = mycursor.fetchone()
            threea = threea+ int(result4a[0])
        for i in result:
            query5a = "SELECT count(exitpoint) from travelh where exitpoint like'"+str(4)+"'and username like'"+i[0]+"'"
            mycursor.execute(query5a)
            result5a = mycursor.fetchone()
            foura = foura + int(result5a[0])
        for i in resulta:
            query6a = "SELECT count(exitpoint) from travelh where exitpoint like'"+str(5)+"'and username like'"+i[0]+"'"
            mycursor.execute(query6a)
            result6a = mycursor.fetchone()
            fivea = fivea + int(result6a[0])

        q = np.array([[one, two, three, four, five], [onea, twoa, threea, foura, fivea]])
        x_axis_labels = ['Exit1', 'Exit2', 'Exit3', 'Exit4', 'Exit5']
        y_axis_labels = [4, 2]
        hm = sn.heatmap(data = q, xticklabels = x_axis_labels, yticklabels = y_axis_labels)
        plt.show()



    def exitt(self):
        sys.exit(app.exec())


    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(260, 130, 141, 31))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(260, 190, 141, 31))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(170, 10, 581, 101))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(170, 130, 81, 21))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(170, 190, 81, 21))
        self.label_3.setObjectName("label_3")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.login())
        self.pushButton.setGeometry(QtCore.QRect(200, 250, 93, 51))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget,clicked = lambda: self.signin())
        self.pushButton_2.setGeometry(QtCore.QRect(260, 340, 93, 51))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget,clicked=lambda: self.exitt())
        self.pushButton_3.setGeometry(QtCore.QRect(420, 340, 93, 51))
        self.pushButton_3.setObjectName("pushButton_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(110, 350, 161, 20))
        self.label_4.setObjectName("label_4")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget, clicked=lambda: self.pie())
        self.pushButton_4.setGeometry(QtCore.QRect(600, 300, 100, 50))
        self.pushButton_4.resize(175, 125)
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_4.setText("Analytics of exits")

        self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget, clicked=lambda: self.Vech())
        self.pushButton_5.setGeometry(QtCore.QRect(600, 80, 100, 50))
        self.pushButton_5.resize(175, 125)
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_5.setText("Vehicle analytics")

        self.pushButton_6 = QtWidgets.QPushButton(self.centralwidget, clicked=lambda: self.heatmap())
        self.pushButton_6.setGeometry(QtCore.QRect(70, 450, 100, 55))
        self.pushButton_6.resize(100, 100)
        self.pushButton_6.setObjectName("pushButton_6")
        self.pushButton_6.setText("Overall Analysis")

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:24pt;\">Welcome To FasTag</span></p></body></html>"))
        self.label_2.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt;\">username</span></p></body></html>"))
        self.label_3.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt;\">password</span></p></body></html>"))
        self.pushButton.setText(_translate("MainWindow", "Login"))
        self.pushButton_2.setText(_translate("MainWindow", "Sign in"))
        self.pushButton_3.setText(_translate("MainWindow", "exit"))
        self.label_4.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt;\">new to FasTag? -&gt;</span></p></body></html>"))




if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
